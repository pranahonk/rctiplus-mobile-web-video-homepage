{"version":3,"file":"static/webpack/static\\development\\pages\\signin.js.55c8a7b532d7c1910185.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import '../assets/scss/custom.scss';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../redux/actions';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Layout = ({ children, title, isAuthenticated, deauthenticate }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    useEffect(() => function () {\r\n        if (typeof window !== 'undefined') {\r\n            window.addEventListener('beforeinstallprompt', async e => {\r\n                // beforeinstallprompt Event fired\r\n                try {\r\n                    // e.userChoice will return a Promise.\r\n                    const choiceResult = await e.userChoice;\r\n                    if (choiceResult.outcome === 'dismissed') {\r\n                        /* eslint-disable no-console */\r\n                        console.log('User cancelled home screen install');\r\n                        /* eslint-enable no-console */\r\n                    } else {\r\n                        /* eslint-disable no-console */\r\n                        console.log('User added to home screen');\r\n                        /* eslint-enable no-console */\r\n                    }\r\n                } catch (error) {\r\n                    /* eslint-disable no-console */\r\n                    console.error(\r\n                        'user choice prompt promise failed to resolve, error: ',\r\n                        error,\r\n                    );\r\n                    /* eslint-enable no-console */\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n                <link rel=\"icon\" href=\"/favicon.ico\" />\r\n                <link rel=\"manifest\" href=\"/manifest.json\" />\r\n            </Head>\r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n                <NavbarBrand href=\"/\">Home</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        {!isAuthenticated && (\r\n                            <NavItem>\r\n                                <NavLink href=\"/signin\">Sign In</NavLink>\r\n                            </NavItem>)}\r\n\r\n                        {isAuthenticated && (\r\n                            <NavItem>\r\n                                <NavLink onClick={deauthenticate}>Sign Out</NavLink>\r\n                            </NavItem>)}\r\n\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                Options\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Option 1\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    Option 2\r\n                                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    Reset\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                    {/* <NavbarText>Simple Text</NavbarText> */}\r\n                </Collapse>\r\n            </Navbar>\r\n            <div className=\"tabs is-centered\">\r\n                <ul>\r\n                    <Link href=\"/\"><a>Home</a></Link>\r\n                    {!isAuthenticated && <Link href=\"/signin\"><a>Sign In</a></Link>}\r\n                    {!isAuthenticated && <Link href=\"/signup\"><a>Sign Up</a></Link>}\r\n                    {isAuthenticated && <Link href=\"/users\"><a>Profile</a></Link>}\r\n                    {isAuthenticated && <li onClick={deauthenticate}><a>Sign Out</a></li>}\r\n                </ul>\r\n            </div>\r\n            <div className=\"has-text-centered\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({ isAuthenticated: !!state.authentication.token });\r\n\r\nexport default connect(mapStateToProps, actions)(Layout);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AAIA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAuBA;AACA;AA1BA;AA4BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}