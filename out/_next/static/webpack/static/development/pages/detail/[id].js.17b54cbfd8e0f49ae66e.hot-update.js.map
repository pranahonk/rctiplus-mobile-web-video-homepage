{"version":3,"file":"static/webpack/static/development/pages/detail/[id].js.17b54cbfd8e0f49ae66e.hot-update.js","sources":["webpack:///./pages/detail/.js"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport Img from 'react-image';\nimport Lazyload from 'react-lazyload';\nimport { Carousel } from 'react-responsive-carousel';\nimport Router, { withRouter } from 'next/router';\nimport Head from 'next/head';\n\nimport { showAlert } from '../../utils/helpers';\n\nimport contentActions from '../../redux/actions/contentActions';\nimport searchActions from '../../redux/actions/searchActions';\n\n//load default layout\nimport Layout from '../../components/Layouts/Default';\nimport Navbar from '../../components/Includes/Navbar/NavDetail';\nimport PlayerModal from '../../components/Modals';\nimport ActionModal from '../../components/Modals/ActionModal';\nimport ActionSheet from '../../components/Modals/ActionSheet';\n\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport ShareIcon from '@material-ui/icons/Share';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport { Button, Row, Col } from 'reactstrap';\n\nimport '../../assets/scss/plugins/carousel/carousel.scss';\nimport '../../assets/scss/components/detail.scss'\n\nimport { BASE_URL } from '../../config';\n\nclass Detail extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            summary: '',\n            portrait_image: '',\n            starring: [],\n            trailer_url: '',\n            genre: [],\n            release_date: '',\n            meta: {},\n            resolution: 152,\n            episodes: [],\n            related_programs: [],\n            modal: false,\n            rate_modal: false,\n            action_sheet: false,\n            season: 1,\n            episode_page: 1,\n            length: 5,\n            show_more_allowed: true,\n            caption: '',\n            url: '',\n            hashtags: []\n        };\n\n        this.player = null;\n    }\n\n    showMore() {\n        this.props.getProgramEpisodes(this.props.router.query.id, this.state.season, this.state.episode_page + 1, this.state.length)\n            .then(response => {\n                if (response.status === 200 && response.data.status.code === 0) {\n                    let episodes = this.state.episodes;\n                    episodes.push.apply(episodes, response.data.data);\n                    this.setState({ \n                        episodes: episodes,\n                        episode_page: this.state.episode_page + 1,\n                        show_more_allowed: response.data.data.length >= this.state.length \n                    });\n                }\n            })\n            .catch(error => console.log(error));\n    }\n\n    showOpenPlaystoreAlert() {\n        showAlert('To be able to watch this episode offline, please download RCTI+ application on Playstore', '', 'Open Playstore', 'Cancel', () => { window.open('https://play.google.com/store/apps/details?id=com.fta.rctitv', '_blank'); });\n    }\n\n    componentDidMount() {\n        \n        this.props.getProgramDetail(this.props.router.query.id)\n            .then(response => {\n                if (response.status === 200 && response.data.status.code === 0) {\n                    const data = response.data.data;\n                    this.setState({\n                        title: data.title,\n                        summary: data.summary,\n                        portrait_image: data.portrait_image,\n                        starring: data.starring,\n                        genre: data.genre,\n                        release_date: data.release_date,\n                        trailer_url: data.trailer_url,\n                        meta: response.data.meta\n                    });\n\n                    this.props.getProgramEpisodes(this.props.router.query.id, this.state.season, this.state.episode_page, this.state.length)\n                        .then(response => {\n                            console.log(response);\n                            if (response.status === 200 && response.data.status.code === 0) {\n                                this.setState({ \n                                    episodes: response.data.data,\n                                    show_more_allowed: response.data.data.length >= this.state.length \n                                });\n                            }\n                        })\n                        .catch(error => console.log(error));\n\n                    this.props.getRelatedProgram(this.props.router.query.id)\n                        .then(response => {\n                            if (response.status === 200 && response.data.status.code === 0) {\n                                this.setState({ related_programs: response.data.data });\n                            }\n                        })\n                        .catch(error => console.log(error))\n                }\n            })\n            .catch(error => console.log(error));\n    }\n\n    toggle() {\n        this.setState({ modal: !this.state.modal }, () => {\n            if (this.state.modal) {\n                setTimeout(() => {\n                    if (this.player != null) {\n                        this.player.play();\n                    }\n                }, 1000);\n            }\n        });\n    }\n\n    toggleRateModal() {\n        this.setState({ rate_modal: !this.state.rate_modal });\n    }\n\n    toggleActionSheet(caption = '', url = '', hashtags = []) {\n        this.setState({ \n            action_sheet: !this.state.action_sheet,\n            caption: caption,\n            url: url,\n            hashtags: hashtags\n        });\n    }\n\n    render() {\n        let showMoreButton = '';\n        if (this.state.show_more_allowed) {\n            showMoreButton = (<div className=\"list-footer\">\n                                <Button onClick={this.showMore.bind(this)} size=\"sm\" className=\"show-more-button\">\n                                    <ExpandMoreIcon /> Show More\n                                </Button>\n                            </div>);\n        }\n\n        return (\n            <Layout title=\"Program Detail\">\n                <Head>\n                    <meta name=\"description\" content={this.state.summary}/>\n                </Head>\n                <Navbar />\n                <PlayerModal \n                    open={this.state.modal}\n                    toggle={this.toggle.bind(this)}\n                    onReady={() => this.player = window.jwplayer('example-id')}\n                    playerId=\"example-id\"\n                    videoUrl={this.state.trailer_url}/>\n\n                <ActionModal \n                    open={this.state.rate_modal}\n                    toggle={this.toggleRateModal.bind(this)}/>\n\n                <ActionSheet\n                    caption={this.state.caption}\n                    url={this.state.url}\n                    open={this.state.action_sheet}\n                    hashtags={this.state.hashtags}\n                    toggle={this.toggleActionSheet.bind(this, this.state.title, BASE_URL + this.props.router.asPath, ['rcti'])}/>\n\n                <div style={{ backgroundImage: 'url(' + (this.state.meta.image_path + this.state.resolution + this.state.portrait_image) + ')' }} className=\"bg-jumbotron\"></div>\n                <div className=\"content\">\n                    <div className=\"content-thumbnail\">\n                        <Img src={[this.state.meta.image_path + this.state.resolution + this.state.portrait_image, 'https://placehold.it/152x227']} />\n                    </div>\n                    <div className=\"watch-button-container\">\n                        <Button onClick={this.toggle.bind(this)} className=\"watch-button\">\n                            <PlayCircleFilledIcon /> Watch Trailer\n                        </Button>\n                    </div>\n                    <p className=\"content-title\"><strong>{this.state.title}</strong></p>\n                    <p className=\"content-genre\">| {this.state.release_date} |\n                        &nbsp;{this.state.genre.map((g, i) => {\n                        let str = g.name;\n                        if (i < this.state.genre.length - 1) {\n                            str += ' - ';\n                        }\n                        return str;\n                    })}&nbsp;\n                    |</p>\n                    <p className=\"content-description\">{this.state.summary}</p>\n                    <p className=\"content-description\">Starring: {this.state.starring.map((s, i) => {\n                        let str = s.name;\n                        if (i < this.state.starring.length - 1) {\n                            str += ', ';\n                        }\n                        return str;\n                    })}</p>\n                    <div className=\"action-buttons\">\n                        <div className=\"action-button\">\n                            <ThumbUpIcon onClick={this.toggleRateModal.bind(this)} className=\"action-icon\" />\n                            <p>Rate</p>\n                        </div>\n                        <div className=\"action-button\">\n                            <PlaylistAddIcon className=\"action-icon\" />\n                            <p>My List</p>\n                        </div>\n                        <div className=\"action-button\">\n                            <ShareIcon onClick={this.toggleActionSheet.bind(this, this.state.title, BASE_URL + this.props.router.asPath, ['rcti'])} className=\"action-icon\" />\n                            <p>Share</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"list-box\">\n                    <div className=\"list-menu\">\n                        <p className=\"menu-title\">Episode</p>\n                    </div>\n                    <div className=\"list-content\">\n                        <p className=\"list-expand\">\n                            Season 1 <ExpandMoreIcon />\n                        </p>\n                        {this.state.episodes.map(e => (\n                            <div key={e.id}>\n                                <Row>\n                                    <Col>\n                                        <Img src={[this.state.meta.image_path + '140' + e.landscape_image, 'https://placehold.it/140x84']} />\n                                    </Col>\n                                    <Col>\n                                        <p className=\"item-title\">S{e.season}:E{e.episode} {e.title}</p>\n                                        <div className=\"item-action-buttons\">\n                                            <div className=\"action-button\">\n                                                <PlaylistAddIcon className=\"action-icon\" />\n                                            </div>\n                                            <div className=\"action-button\">\n                                                <ShareIcon onClick={this.toggleActionSheet.bind(this, 'S' + e.season + ':E' + e.episode + ' ' + e.title, BASE_URL + this.props.router.asPath, ['rcti'])} className=\"action-icon\" />\n                                            </div>\n                                            <div className=\"action-button\">\n                                                <GetAppIcon onClick={this.showOpenPlaystoreAlert.bind(this)} className=\"action-icon\" />\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <p className=\"item-description\">{e.summary}</p>\n                                    </Col>\n                                </Row>\n                            </div>\n                        ))}\n                    </div>\n                    {showMoreButton}\n                    \n                </div>\n                \n                <div className=\"related-box\">\n                    <div className=\"related-menu\">\n                        <p className=\"related-title\"><strong>Related</strong></p>\n                        {/* <p className=\"related-subtitle\">Show more &gt;</p> */}\n                        <div className=\"related-slider\">\n                            <Carousel\n                                id=\"detail-carousel\"\n                                showThumbs={false}\n                                showIndicators={false}\n                                stopOnHover={true}\n                                showArrows={false}\n                                showStatus={false}\n                                swipeScrollTolerance={1}\n                                onClickItem={(index) => {\n                                    Router.push('/detail/' + this.state.related_programs[index].id);\n                                }}\n                                swipeable={true}>\n                                {this.state.related_programs.map(rp => (\n                                    <Lazyload key={rp.id} height={100}>\n                                        <Img src={[this.state.meta.image_path + '140' + rp.portrait_image, '/static/placeholders/placeholder_potrait.png']} className=\"related-program-thumbnail\" />\n                                    </Lazyload>\n                                ))}\n                            </Carousel>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n\n}\n\nDetail.getInitialProps = ctx => {\n    alert(JSON.stringify(ctx));\n};\n\nexport default connect(state => state, {\n    ...contentActions,\n    ...searchActions\n})(withRouter(Detail));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAwBA;AA1BA;AA2BA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;;;;AAvQA;AACA;AA0QA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}