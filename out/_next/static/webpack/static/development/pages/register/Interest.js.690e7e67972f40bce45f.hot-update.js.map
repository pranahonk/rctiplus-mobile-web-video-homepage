{"version":3,"file":"static/webpack/static/development/pages/register/Interest.js.690e7e67972f40bce45f.hot-update.js","sources":["webpack:///./pages/register/Interest.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { showAlert } from '../../utils/helpers';\nimport userActions from '../../redux/actions/userActions';\nimport notificationActions from '../../redux/actions/notificationActions';\n\n//load default layout\nimport Layout from '../../components/Layouts/Default';\n\n//load navbar default\nimport NavBackInterest from '../../components/Includes/Navbar/NavBackInterest';\n\n//load reactstrap components\nimport { Button, FormGroup, Row, Col, Container } from 'reactstrap';\n\nimport '../../assets/scss/components/interest.scss';\n\nclass Interest extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinterests: [],\n\t\t\tselected_interests: [],\n\t\t\tselected_interest_components: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getInterests()\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(this.props.user);\n\t\t\t\tthis.setState({ interests: this.props.user.data });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tselectInterest(interest, order) {\n\t\tlet selectedInterests = this.state.selected_interests;\n\t\tlet selectedInterestComponents = this.state.selected_interest_components;\n\n\t\tlet alreadySelected = false;\n\t\tlet selectedIndex = -1;\n\n\t\tfor (let i = 0; i < selectedInterests.length; i++) {\n\t\t\tif (interest.id == selectedInterests[i].id) {\n\t\t\t\talreadySelected = true;\n\t\t\t\tselectedIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (selectedInterests.length >= 3) {\n\t\t\tif (alreadySelected) {\n\t\t\t\tselectedInterests.splice(selectedIndex, 1);\n\t\t\t\tselectedInterestComponents.splice(selectedIndex, 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowAlert('Cannot choose more than 3 interests', 'Choose Interests');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (alreadySelected) {\n\t\t\t\tselectedInterests.splice(selectedIndex, 1);\n\t\t\t\tselectedInterestComponents.splice(selectedIndex, 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselectedInterests.push(interest);\n\t\t\t\tselectedInterestComponents.push(order);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ \n\t\t\tselected_interests: selectedInterests,\n\t\t\tselected_interest_components: selectedInterestComponents\n\t\t});\n\t}\n\n\tshowNotification(e) {\n\t\te.preventDefault();\n\t\tconsole.log('SELECTED INTERESTS:', this.state.selected_interests);\n\t\tconst hideNotification = this.props.hideNotification;\n\t\tif (this.state.selected_interests.length < 3) {\n\t\t\tthis.props.showNotification('You must select 3 interests', false);\n\t\t\tsetTimeout(function() {\n\t\t\t\thideNotification();\n\t\t\t}, 3000);\n\t\t}\n\t\telse {\n\t\t\tlet interestsId = [];\n\t\t\tfor (let i = 0; i < this.state.selected_interests.length; i++) {\n\t\t\t\tinterestsId.push(this.state.selected_interests[i].id);\n\t\t\t}\n\t\t\tthis.props.setInterest(interestsId)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.status.code === 0) {\n\t\t\t\t\t\tthis.props.showNotification('Your data has been saved');\n\t\t\t\t\t\tRouter.push('/register/phone/step3');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.props.showNotification('Error while saving interests. Please try again! (Response code = )' + response.data.status.code, false);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\thideNotification();\n\t\t\t\t\t}, 3000);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.props.showNotification('Error while saving interests. Please try again!', false);\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\thideNotification();\n\t\t\t\t\t}, 3000);\n\t\t\t\t});\n\t\t}\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout title=\"Your Interest\">\n\t\t\t\t<NavBackInterest />\n\t\t\t\t<div className=\"wrapper-content\" style={{ marginTop: 40 }}>\n\t\t\t\t\t<div className=\"login-box\" style={{ width: '100%' }}>\n\t\t\t\t\t\t<div className=\"choose_interest\">\n\t\t\t\t\t\t\t<p className=\"txt-content-interest\">\n\t\t\t\t\t\t\t\tWelcome,\n\t\t\t\t\t\t\t\tThank you, your account has been successfully registered.\n\t\t\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t\t\tHelp us, select 3 category interests:\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t{this.state.interests.map((interest, index) => (\n\t\t\t\t\t\t\t\t\t\t<Col xs=\"6\" key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.selectInterest.bind(this, interest, index)} className={'interest' + ' ' + (this.state.selected_interest_components.indexOf(index) != -1 ? 'interest-selected' : '')}>{interest.name}</Button>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup className=\"btn-next-position\">\n\t\t\t\t\t\t\t<Button onClick={this.showNotification.bind(this)} className=\"btn-next\">Save</Button>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default connect(state => state, {\n\t...userActions,\n\t...notificationActions\n})(Interest);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAtIA;AACA;AAwIA;AAAA;AAAA;;;;A","sourceRoot":""}