{"version":3,"file":"static/webpack/static/development/pages/register/phone/step2.js.d0a346ae7910fab0a53d.hot-update.js","sources":["webpack:///./pages/register/phone/step2.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport registerActions from '../../../redux/actions/registerActions';\nimport notificationActions from '../../../redux/actions/notificationActions';\nimport { showConfirmAlert } from '../../../utils/helpers';\n\n\n\n//load default layout\nimport Layout from '../../../components/Layouts/Default';\n\n//load navbar default\nimport NavBackVerification from '../../../components/Includes/Navbar';\n\n//load reactstrap components\nimport { Button, Form, FormGroup } from 'reactstrap';\n\nimport ReactCodeInput from 'react-verification-code-input';\nimport '../../../assets/scss/components/otp_steps.scss'; // TODO: kadang tidak ke-load\n\nimport Countdown, { zeroPad } from 'react-countdown-now';\n\n\n\n\nclass Step2 extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\totp: '',\n\t\t\tusername: '',\n\t\t\talert_message: 'Carefully check your Email for verification code. You only have 3 attempts',\n\t\t\tinterval: 60,\n\t\t\tcountdown_key: 0,\n\t\t\tcurrent_time: Date.now()\n\t\t};\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(this.props.registration);\n\t\tthis.setState({ username: this.props.registration.username }, () => {\n\t\t\tlet username = this.state.username;\n\t\t\tif (this.props.registration.username_type === 'PHONE_NUMBER') {\n\t\t\t\tusername = '62' + username;\n\t\t\t}\n\t\t\tthis.props.getOtp(username);\n\t\t});\n\t}\n\n\tsubmitOtp(e) {\n\t\te.preventDefault();\n\t\tlet username = this.state.username;\n\t\tif (this.props.registration.username_type === 'PHONE_NUMBER') {\n\t\t\tusername = '62' + username;\n\t\t}\n\n\t\tthis.props.verifyOtp(username, this.state.otp)\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.status.code != 0) {\n\t\t\t\t\tthis.props.showNotification(response.data.status.message_client, false);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.props.hideNotification();\n\t\t\t\t\t}, 5000);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.props.register({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tpassword: this.props.registration.password,\n\t\t\t\t\t\tfullname: this.props.registration.fullname,\n\t\t\t\t\t\tgender: this.props.registration.gender,\n\t\t\t\t\t\tdob: this.props.registration.dob,\n\t\t\t\t\t\totp: this.state.otp,\n\t\t\t\t\t\tdevice_id: '1'\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tRouter.push('/register/Interest');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error.status == 200) {\n\t\t\t\t\t\t\tthis.props.showNotification(error.data.status.message_client, false);\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tthis.props.hideNotification();\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t\tif (error.data.status.code === 0) {\n\t\t\t\t\t\t\t\tRouter.push('/register/Interest');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tshowAlert() {\n\t\tlet username = this.state.username;\n\t\tif (this.props.registration.username_type === 'PHONE_NUMBER') {\n\t\t\tusername = '62' + username;\n\t\t}\n\n\t\tshowConfirmAlert(this.state.alert_message, 'OTP Limits', () => {\n\t\t\t// code = 1 (please wait a minute)\n\t\t\tthis.props.getOtp(username)\n\t\t\t\t.then(response => {\n\t\t\t\t\tlet newState = {};\n\t\t\t\t\tif (response.status === 200 && response.data.status.message_client != 'You have reached maximum attempts. please, try again later after 1 hours') {\n\t\t\t\t\t\tnewState = {\n\t\t\t\t\t\t\tcurrent_time: Date.now(),\n\t\t\t\t\t\t\tcountdown_key: this.state.countdown_key + 1\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tnewState['alert_message'] = response.data.status.message_client;\n\t\t\t\t\tthis.setState(newState);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}, true, 'Not Now', 'Request New OTP');\n\t}\n\n\trender() {\n\t\tlet text = 'Verification code was sent to your email';\n\t\tlet username = this.state.username;\n\n\t\tif (this.props.registration.username_type === 'PHONE_NUMBER') {\n\t\t\ttext = 'Verification code was sent via SMS to your phone number';\n\t\t\tlet newUsername = '';\n\t\t\tfor (let i = 0; i < username.length; i++) {\n\t\t\t\tnewUsername += username[i];\n\t\t\t\tif (i == 2 || i == 6) {\n\t\t\t\t\tnewUsername += ' ';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tusername = '+62 ' + newUsername;\n\t\t}\n\n\t\treturn (\n\t\t\t<Layout title=\"Register Step 2\">\n\t\t\t\t<NavBackVerification title=\"Verification\"/>\n\t\t\t\t<div className=\"wrapper-content\" style={{ width: '100%', marginTop: 50 }}>\n\t\t\t\t\t<div className=\"login-box\" style={{ width: '100%' }}>\n\t\t\t\t\t\t<p className=\"text-default-rcti\">Verify your account, enter your code below</p>\n\t\t\t\t\t\t<p style={{ fontSize: 14 }} className=\"text-default-rcti\">{text} <span style={{ color: 'white' }}>{username}</span></p>\n\t\t\t\t\t\t<Form onSubmit={this.submitOtp.bind(this)}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<ReactCodeInput\n\t\t\t\t\t\t\t\t\tfields={4}\n\t\t\t\t\t\t\t\t\tonChange={otp => this.setState({ otp: otp })}\n\t\t\t\t\t\t\t\t\tclassName=\"otp-input\" />\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<label className=\"lbl_rsndcode\">\n\t\t\t\t\t\t\t\t\tResend code <Countdown\n\t\t\t\t\t\t\t\t\t\tkey={this.state.countdown_key}\n\t\t\t\t\t\t\t\t\t\tdate={this.state.current_time + (this.state.interval * 1000)}\n\t\t\t\t\t\t\t\t\t\trenderer={({ hours, minutes, seconds, completed }) => {\n\t\t\t\t\t\t\t\t\t\t\tif (completed) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<p className=\"text-default-rcti\" style={{ fontSize: 12, textAlign: 'center' }}><span className=\"el-red\">Change Phone Number</span> or <span onClick={this.showAlert.bind(this)} className=\"el-red\">Resend Code</span></p>);\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\treturn (<span>{zeroPad(minutes)}:<span className=\"time-resendcode\">{zeroPad(seconds)}</span></span>);\n\t\t\t\t\t\t\t\t\t\t}}></Countdown>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup className=\"btn-next-position\">\n\t\t\t\t\t\t\t\t<Button className=\"btn-next block-btn\">Verify</Button>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default connect(state => state, {\n\t...registerActions,\n\t...notificationActions\n})(Step2);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA3JA;AACA;AA6JA;AAAA;AAAA;;;;A","sourceRoot":""}